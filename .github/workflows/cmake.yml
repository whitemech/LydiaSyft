name: CMake

on:
  push:
    branches: [ main, clean-code ]
  pull_request:
    branches: [ main, clean-code ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: '${{ secrets.LYDIA_SYFT_ACCESS_TOKEN }}'

      - name: Install dependencies
        run: |
          sudo apt-get update
          
          # install flex/bison
          sudo apt-get purge -y flex
          sudo apt-get purge -y bison
          sudo apt-get install -y flex bison
          sudo apt-get autoremove
          
          # install graphviz
          sudo apt-get install graphviz libgraphviz-dev
          
          # install Boost
          sudo apt-get install libboost-dev
      - name: Install CUDD
        run: |
          git clone --recursive https://github.com/KavrakiLab/cudd.git
          cd cudd
          autoreconf -i
          ./configure --enable-silent-rules --enable-obj --enable-dddmp
          sudo make -j install
      - name: Install MONA
        run: |
          # the following are not valid since we need some headers not present in the usual distribution
          # git clone --recursive https://github.com/whitemech/MONA.git
          # cd MONA
          # git checkout v1.4-19.dev0
          # ./configure && make -j && sudo make -j install
          wget https://github.com/whitemech/MONA/releases/download/v1.4-19.dev0/mona_1.4-19.dev0_linux-amd64.tar.gz
          tar -xf mona_1.4-19.dev0_linux-amd64.tar.gz
          cd mona_1.4-19.dev0_linux-amd64
          sudo cp -P lib/* /usr/local/lib/
          sudo cp -Pr include/* /usr/local/include
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        # TODO: disable Lydia tests, temporarily run them manually
        # run: ctest -C ${{env.BUILD_TYPE}}
        run: ${{github.workspace}}/build/bin/tests
